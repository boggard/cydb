package com.github.boggard.cydb.model

import com.github.boggard.cydb.model.statement.casestatement.*
import java.util.List
import java.util.HashSet

global com.github.boggard.cydb.dto.AnalyzeResult res;

rule "TYPE-1"
when
    $col : Column( (type.type == "VARCHAR"
                        || type.type == "NVARCHAR"
                        || type.type == "VARBINARY")
                    && type.length <= 3 )
then
    res.putError($col.getLine(), drools.getRule().getName(), "Using variable length types with a short maximum length");
end

rule "TYPE-2"
when
    $col : Column( (type.type == "VARCHAR"
                        || type.type == "NVARCHAR"
                        || type.type == "VARBINARY")
                    && type.length == null)
then
    res.putError($col.getLine(), drools.getRule().getName(), "Using variable length types without specifying size");
end

rule "TYPE-3"
when
$caseSmt: CaseStatement()
$valueTypeList : List( size > 1 ) from accumulate( $cr: CaseResult() from $caseSmt.results,
                                    init( HashSet types = new HashSet(); ),
                                    action( types.add($cr.getValueType()); ),
                                    result( types )
                                )
then
    res.putError($caseSmt.getLine(), drools.getRule().getName(), "Using results with different types in CASE expressions");
end
